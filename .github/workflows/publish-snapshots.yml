name: Publish Snapshots

on:
  push:
    branches: 
      - main
      - master
    paths:
      - 'java-sdk/**'
  workflow_dispatch:

jobs:
  publish-snapshots:
    # Only run for snapshot publishing, not when release-please creates releases
    if: "!contains(github.event.head_commit.message, 'chore(main): release')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        module:
          - java-sdk/packages/core
          - java-sdk/packages/client
          - java-sdk/packages/http
          - java-sdk/packages/ok-http
          - java-sdk/packages/spring-http
          - java-sdk/integrations/spring-ai
          - java-sdk/utils/json

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Configure Maven settings for GitHub Packages
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>github</id>
              <username>\${env.GITHUB_ACTOR}</username>
              <password>\${env.GITHUB_TOKEN}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Get module info
      id: module-info
      run: |
        MODULE_PATH="${{ matrix.module }}"
        MODULE_PATH_NO_PREFIX=${MODULE_PATH#java-sdk/}
        MODULE_NAME=$(basename "$MODULE_PATH_NO_PREFIX")
        echo "module_name=$MODULE_NAME" >> $GITHUB_OUTPUT
        echo "module_path=$MODULE_PATH" >> $GITHUB_OUTPUT
        echo "module_path_no_prefix=$MODULE_PATH_NO_PREFIX" >> $GITHUB_OUTPUT

    - name: Check for changes in module
      id: changes
      run: |
        # Check if there are changes in this module since last commit
        if git diff --quiet HEAD~1 HEAD -- "${{ matrix.module }}/" ; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes detected in ${{ matrix.module }}"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in ${{ matrix.module }}"
        fi

    - name: Update version for snapshot builds
      if: steps.changes.outputs.changed == 'true'
      run: |
        cd "${{ matrix.module }}"
        # Get current version and append snapshot suffix with build number
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        BASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
        BUILD_VERSION="${BASE_VERSION}-SNAPSHOT-${{ github.run_number }}"
        mvn versions:set -DnewVersion=$BUILD_VERSION -DgenerateBackupPoms=false
        echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV

    - name: Run tests for module
      if: steps.changes.outputs.changed == 'true'
      run: |
        cd "${{ matrix.module }}"
        mvn clean test

    - name: Build and publish module
      if: steps.changes.outputs.changed == 'true'
      run: |
        cd "${{ matrix.module }}"
        mvn clean deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}